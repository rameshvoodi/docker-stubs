from .. import errors as errors
from .resource import Collection as Collection, Model as Model
from _typeshed import Incomplete
from collections.abc import Generator

class Plugin(Model):
    @property
    def name(self): ...
    @property
    def enabled(self): ...
    @property
    def settings(self): ...
    def configure(self, options) -> None: ...
    def disable(self, force: bool = ...) -> None: ...
    def enable(self, timeout: int = ...) -> None: ...
    def push(self): ...
    def remove(self, force: bool = ...): ...
    def upgrade(self, remote: Incomplete | None = ...) -> Generator[Incomplete, Incomplete, None]: ...

class PluginCollection(Collection):
    model = Plugin
    def create(self, name, plugin_data_dir, gzip: bool = ...): ...
    def get(self, name): ...
    def install(self, remote_name, local_name: Incomplete | None = ...): ...
    def list(self): ...
